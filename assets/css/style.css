/*
relative -относительно себя двигается
при этом место элемента остается
и все соседи остаются на своих местах
(top, left, rigth, botom)

child-absolute parent-static
место элемента child теперь свободно и
его используют соседи (он теперь находится 
в другом слое)
сдвиг (top, left, rigth, botom) будет 
относительно body или ближайшего предка
в не в статическом позиционировании

child-absolute parent-relative
тоже
сдвиг (top, left, rigth, botom) будет 
относительно parent

fixed - тоже viewport
*/

.grand{
    width: 600px;
    height: 450px;
    background-color: green;
    border: 2px solid gray;
    margin: 10px;

}

.parent{
    width: 500px;
    height: 410px;
    background-color: lightskyblue;
    border: 2px solid gray;
    margin: 10px;
}

.child1{
    width: 200px;
    height: 200px;
    background-color: yellow;
    border: 2px solid gray;
}

.child2{
    width: 200px;
    height: 200px;
    background-color: orange;
    border: 2px solid gray;
}




/*

*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
body{
    background-color: black;
}

.userCardContainer p {
    margin-top: 20px;
}

.userCardContainer{
    width: 400px;
    height: 500px;
    border: 2px solid white;
    background-color: beige;
}

.colorCardContainer{
    width: 100%;
    height: 40%;
    background-color: orangered;
}

.userInfoContainer{
    width: 100%;
    height: 60%;
    background-color: lightgrey;
    text-align: center;
    padding: 10px;
}

.userPhoto{}

.infoContainer{
}

.userName{
    font-size: 20px;
    font-weight: 600;
}

.userJob{
    font-size: 16px;
    color: rgba(0, 0, 0, 0.5);
    margin-bottom: 30px;
}

.buttonFollow{
    margin-top: 20px;
    width: 200px;
    height: 30px;
    border: 1px solid black;
    border-radius: 2px;
    margin-left: auto;
    margin-right: auto;
}

.followers{
    font-size: 16px;
    color: rgba(0, 0, 0, 0.3);
    margin-top: 20px;
}

*/